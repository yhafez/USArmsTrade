[{"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\index.js":"1","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\App.js":"2","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\reportWebVitals.js":"3","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\RegionChart\\RegionChart.js":"4","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\Instructions\\Instructions.js":"5","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\Header\\Header.js":"6","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\HeatMap\\HeatMap.js":"7","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\utils\\format.js":"8","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\FilterUI\\FilterUI.js":"9","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\FilterUI\\DropDown.js":"10"},{"size":517,"mtime":1607359221165,"results":"11","hashOfConfig":"12"},{"size":2910,"mtime":1607553196221,"results":"13","hashOfConfig":"12"},{"size":397,"mtime":1607529599479,"results":"14","hashOfConfig":"12"},{"size":2263,"mtime":1607529599457,"results":"15","hashOfConfig":"12"},{"size":1652,"mtime":1607552240099,"results":"16","hashOfConfig":"12"},{"size":203,"mtime":1607439875283,"results":"17","hashOfConfig":"12"},{"size":13585,"mtime":1607553338503,"results":"18","hashOfConfig":"12"},{"size":104,"mtime":1607442014664,"results":"19","hashOfConfig":"12"},{"size":1893,"mtime":1607552240091,"results":"20","hashOfConfig":"12"},{"size":1778,"mtime":1607552240088,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ygafa8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\index.js",[],["46","47"],"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\App.js",["48"],"import React, {useState, useEffect} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport HeatMap from \"./components/HeatMap/HeatMap\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Instructions from \"./components/Instructions/Instructions\";\r\nimport RegionChart from \"./components/RegionChart/RegionChart\";\r\nimport FilterUI from \"./components/FilterUI/FilterUI\"\r\n\r\nfunction App() {\r\n\r\n  // Display total values on heatmap by default, replace with data from single year (start date) or date range based on filter options\r\n  const [startYear, setStartYear] = useState(NaN);\r\n  const [endYear, setEndYear] = useState(NaN);\r\n  \r\n  // Specifies whether the map will render data on notification, authorization, or delivery amounts\r\n  const [dataType, setDataType] = useState(\"deliveries\")\r\n\r\n  function PropChangeWatch({ startYear, endYear, dataType }){\r\n\r\n    useEffect(()=>{\r\n      console.log(\"In app in useEffect \",  startYear, endYear, dataType);\r\n    }, [startYear, endYear, dataType])\r\n\r\n    return(\r\n      <HeatMap\r\n        setStartYear={setStartYear}\r\n        startYear={startYear}\r\n        setEndYear={setEndYear}\r\n        endYear={endYear}\r\n        dataType={dataType}\r\n      />\r\n    )\r\n  }\r\n\r\n  \r\n  console.log(\"In app \",  startYear, endYear, dataType);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"map-styling\">\r\n        <PropChangeWatch startYear={startYear} endYear={endYear} dataType={dataType} />\r\n      </div>\r\n      <FilterUI\r\n        setDataType={setDataType}\r\n        setStartYear={setStartYear}\r\n        setEndYear={setEndYear}\r\n      />\r\n      <Instructions />\r\n      <RegionChart />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// class App extends React.component{\r\n\r\n  \r\n//   componentDidMount(){\r\n//   // Display total values on heatmap by default, replace with data from single year (start date) or date range based on filter options\r\n//   const [startYear, setStartYear] = useState(NaN);\r\n//   const [endYear, setEndYear] = useState(NaN);\r\n  \r\n//   // Specifies whether the map will render data on notification, authorization, or delivery amounts\r\n//   const [dataType, setDataType] = useState(\"deliveries\")\r\n\r\n  \r\n//   console.log(\"In app \",  startYear, endYear, dataType);\r\n  \r\n//   render(){\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <Header />\r\n//         <Instructions />\r\n//         <FilterUI\r\n//           setDataType={setDataType}\r\n//           setStartYear={setStartYear}\r\n//           setEndYear={setEndYear}\r\n//         />\r\n//         <div className=\"map-styling\">\r\n//           <HeatMap\r\n//             setStartYear={setStartYear}\r\n//             startYear={startYear}\r\n//             setEndYear={setEndYear}\r\n//             endYear={endYear}\r\n//             dataType={dataType}\r\n//           />\r\n//         </div>\r\n//         <RegionChart />\r\n//       </div>\r\n//     );\r\n// }}\r\n// }","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\reportWebVitals.js",[],"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\RegionChart\\RegionChart.js",["49"],"import regionalData from \"../../data/regional_arms_sales_notifications.json\";\r\nimport React from \"react\";\r\nimport { Pie, Doughnut } from \"react-chartjs-2\";\r\nimport { formatNumber } from \"../../utils/format\";\r\n\r\nlet labels = regionalData.map((el) => el[\"Region Arms Sales Dashboard\"]);\r\nlet numbers = regionalData.map((el) =>\r\n  el.Notifications.match(/[0-9]/g).join(\"\")\r\n);\r\n// console.log(numbers);\r\nconst state = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: \"Arms Sales\",\r\n      data: numbers, //data displayed on pie\r\n      backgroundColor: [\"#F54EA2\", \"#41b6e6\", \"#f6003c\", \"#7ebc59\", \"#8134af\"],\r\n      hoverBackgroundColor: [\r\n        \"#b9006e\",\r\n        \"#005792\",\r\n        \"#C1292E\",\r\n        \"#2b9464\",\r\n        \"#42218E\",\r\n      ],\r\n    },\r\n  ],\r\n};\r\nclass RegionChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"700px\", margin: \"50px auto\" }}>\r\n        <Doughnut\r\n          data={state}\r\n          width={200}\r\n          height={400}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            title: {\r\n              display: true,\r\n              text: \"Arms Sales Notifications by Region\",\r\n              fontSize: 25,\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"right\",\r\n              labels: {\r\n                fontSize: 20, //labels font size\r\n                fontColor: \"#000\",\r\n              },\r\n            },\r\n            tooltips: {\r\n              //pop up info\r\n              bodyFontSize: 15,\r\n              callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                  // console.log({ tooltipItem, data });\r\n                  const label = data.labels[tooltipItem.index]; //tooltipItem.index gives the index of this data item in the dataset\r\n                  const value = formatNumber(\r\n                    data.datasets[tooltipItem.datasetIndex].data[\r\n                      tooltipItem.index\r\n                    ] //finds the matching data item in dataset\r\n                  );\r\n                  return `${label}: $${value}`;\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RegionChart;\r\n","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\Instructions\\Instructions.js",["50"],"import React from 'react';\r\nimport './Instructions.css';\r\n\r\nfunction Instructions () {\r\n  return (\r\n    <section className=\"insructions\">\r\n      <h1 className=\"instructions-title\">About This Map</h1>\r\n      <p className=\"instructions-info\">\r\n        This map shows where the US has sold arms from 2000 to 2020. Data for Latin America is also available back until 1996. Hover over a country to see the dollar value of the arms that those countries were approved for (authorizations) and the value of the arms that were actually delivered (deliveries).\r\n      </p>\r\n      <p className=\"instructions-info\">\r\n        The color of the countries visually represent either the amount of authorizations or deliveries depending on the \"Data Type\" filter setting. Light gray/purple represent a lower value, and dark purple/blue represent a higher value. Solid grey represents the U.S. (the arms exporter in this data), as well as any countries that have not received arms from the U.S. based on the data used.\r\n      </p>\r\n      <p className=\"instructions-info\">\r\n        All data represents publicly accessible data from the Security Assistance Monitor Arms Sales <a target=\"_blank\" href=\"https://securityassistance.org/arm-sales/\" alt=\"Opens the Security Assistance Monitor Arms Sales database in a new tab\"> database</a> accessed on December 4th, 2020. As such, countries indicated as receiving no arms from the U.S. may or may not have received arms whose value has not yet been disclosed or declassified to the public, and actual figures across the data may be higher than what is shown.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Instructions;\r\n","C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\Header\\Header.js",[],"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\HeatMap\\HeatMap.js",["51","52"],"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\utils\\format.js",[],"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\FilterUI\\FilterUI.js",[],"C:\\Users\\shyld\\Desktop\\hackathon\\USArmsTrade\\src\\components\\FilterUI\\DropDown.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":15,"column":105,"nodeType":"64","endLine":15,"endColumn":120},{"ruleId":"57","severity":1,"message":"65","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":17},{"ruleId":"57","severity":1,"message":"66","line":205,"column":11,"nodeType":"59","messageId":"60","endLine":205,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Pie' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'worldJson' is defined but never used.","'map' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]